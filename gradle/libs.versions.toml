[versions]
#App
appId = "com.faradyna.assessment"
appName = "Faradyna Assessment"
versionCode = "1"
versionName = "1.0.0"

#SDK Version
compileSdkVersion = "35"
minSdkVersion = "23"
targetSdkVersion = "35"

#Build Plugins
agp = "8.9.1"
kotlin = "2.0.21"
hilt = "2.49"
ksp = "2.0.21-1.0.27"

#Core
coreKtx = "1.15.0"
coroutines = "1.7.3"

#Test
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

#Lifecycle
lifecycleRuntimeKtx = "2.8.7"

#Compose
activityCompose = "1.10.1"
composeBom = "2025.03.01"
navigation = "2.8.9"
hiltCompose = "1.2.0"
materialExtend = "1.7.8"

#Views
appcompat = "1.7.0"

#Log
timber = "5.0.1"

#UI Libraries
intuit = "1.1.1"

#Networking
okhttp = "4.12.0"
retrofit = "2.11.0"
moshi = "1.15.1"
chucker = "4.0.0"

#Local Storage
room = "2.6.1"

#DataStore
datastore = "1.1.4"

#Security
securityCrypto = "1.0.0"

#Accompanies
accompanies = "0.36.0"

#Coil
coil = "2.5.0"

[libraries]
#Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

#Test
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

#Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }

#Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
hilt-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCompose" }
androidx-compose-material = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialExtend" }

#Views
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

#Timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Intuit
intuit-sdp = { module = "com.intuit.sdp:sdp-android", version.ref = "intuit" }
intuit-ssp = { module = "com.intuit.ssp:ssp-android", version.ref = "intuit" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Moshi
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

# Chucker
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }

# Local Storage
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# DataStore
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-pref = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

#Security
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }

#Accompanies
accompanies-permission = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanies" }
accompanies-drawable = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanies" }

#Coil
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil"}

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[bundles]
core = [
    "androidx-core-ktx",
]
compose = [
    "androidx-activity-compose",
    "androidx-ui",
    "androidx-ui-graphics",
    "androidx-ui-tooling-preview",
    "compose-navigation",
    "hilt-compose",
    "coil",
    "androidx-compose-material"
]
accompanies = [
    "accompanies-permission",
    "accompanies-drawable",
]
intuit = [
    "intuit-sdp",
    "intuit-ssp"
]
coroutine = [
    "coroutines-core",
    "coroutines-android"
]
okhttp = [
    "okhttp",
    "okhttp-logging-interceptor"
]
retrofit = [
    "retrofit",
    "retrofit-converter-moshi"
]
room = [
    "room-runtime",
    "room-ktx"
]
datastore = [
    "datastore",
    "datastore-pref"
]